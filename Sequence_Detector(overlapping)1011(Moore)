module seq_detect(output reg y, input x,clk,clr);
  reg [2:0]state,ns;
  parameter  S0 = 0,S1 = 1,S10 = 2,S101 = 3,S1011 = 4;
  assign y = state == S1011 ? 1 : 0;
  always @ (posedge clk) begin
    if (!clr)
      state <= S0;
    else 
      state <= ns;
  end
  always @ (state , x) begin
    case (state)
      S0 : ns = x?S1:S0;
      S1 : ns = x?S1:S10;
      S10 : ns = x?S101:S0;
      S101 : ns = x?S1011:S10;
      S1011: ns = x?S1:S0;
    endcase
  end
endmodule

module tb;
  wire y;
  reg x,clk,clr;
  integer i;
  reg [15:0] data;
  seq_detect f1(y,x,clk,clr);
  always #10 clk =~ clk;
  initial begin
    $monitor("i=%0d, Time=%0d, rstn=%b, in=%b, out=%b",i, $time,clr,x,y);
    $dumpfile("tb.vcd");
    $dumpvars(1,tb);
    clk = 0;
    clr = 0;
    #50 clr = 1;
    data = 16'b1010110110111011;
    i=0;
    #300 $finish; 
  end
  always @ (posedge clk)
    begin   
      x = data[i];  
      i = i+1;
    end 
endmodule