module Bit4_Adder(A,B,S,C);
  input [3:0]A,B;
  output [4:0]S;
  output [2:0]C ;
  full_adder d1(S[0],C[0],A[0],B[0],0);
  full_adder d2(S[1],C[1],A[1],B[1],C[0]);
  full_adder d3(S[2],C[2],A[2],B[2],C[1]);
  full_adder d4(S[3],S[4],A[3],B[3],C[2]);
endmodule

module full_adder(s,c,p,q,r);
  input p,q,r;
  output s,c ;
  assign s = p^q^r ;
  assign c = r&(p^q)|(p&q)&(r|~r);
endmodule


// Code your testbench here
// or browse Examples
module Mux_behav_tb ;
  wire [4:0]S;
  wire [3:0]C;
  reg [3:0]A,B;
  integer i ;
  Bit4_Adder my_gate(A,B,S,C);
  initial begin
    {A,B} = 0;
    $display("The Input And Output are ");
    $dumpfile("Mux_behav_tb.vcd");
    $dumpvars(1,Mux_behav_tb);
    $monitor("time=%0d,A=%d,B=%d,,S=%d",$time,A,B,S);//by using %b & using %d
    for(i = 0 ; i<=10 ; i++)
      begin
        A = $random ;
        B = $random ;
    	#2 ;
    end
  end
endmodule


The Input And Output are 
time=0,A= 4,B= 1,,S= 5
time=2,A= 9,B= 3,,S=12
time=4,A=13,B=13,,S=26
time=6,A= 5,B= 2,,S= 7
time=8,A= 1,B=13,,S=14
time=10,A= 6,B=13,,S=19
time=12,A=13,B=12,,S=25
time=14,A= 9,B= 6,,S=15
time=16,A= 5,B=10,,S=15
time=18,A= 5,B= 7,,S=12
time=20,A= 2,B=15,,S=17