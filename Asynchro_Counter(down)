module counter(input clk,rstn,output[1:0]q);
  wire [1:0] qb;
  t_ff tf0(1,clk,rstn,q[0],qb[0]);
  t_ff tf2(1,clk,rstn,q[1],qb[1]);
endmodule

module t_ff(t, clk, rstn,q,qb);
  input t,clk,rstn;
  output reg q,qb;
  assign qb=~q;
  always @(negedge clk)
    begin
    if (!rstn)
      begin
      q=0;
      //qb<=~q;
      end
  else if(clk)
    begin
      if(t)q<=~q;//qb=~q;
    end
  end
endmodule


module counter_tb;
  reg clk,rstn;
  wire [1:0]y;
  wire q,qb;
  counter tl0(clk,rstn,q);
  always#5 clk<=~clk;
  initial begin
    $dumpfile("counter_tb.vcd");
    $dumpvars(1,counter_tb);
    {clk,rstn}<=0;
   #10 rstn<=1;
     #48 rstn = 0;
    #20 rstn = 1;
    #10 $finish ;
  end
endmodule